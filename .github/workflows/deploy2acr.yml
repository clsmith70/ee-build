# Workflow name
name: ACR EE build (reusable)


# Controls when the workflow will run
on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      EE_FOLDER_NAME:
        description: 'name of the folder where the EE is located (will become the name of the EE)'
        default: ''
        required: true
        type: string
      EE_IMAGE_TAG:
        description: 'just one tag for image build'
        default: 'latest'
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        description: 'required for Azure registry login'
        required: false
      AZURE_CLIENT_ID:
        description: 'required for Azure registry login'
        required: false
      AZURE_TENANT_ID:
        description: 'required for Azure registry login'
        required: false
      AZURE_SUBSCRIPTION_ID:
        description: 'required for Azure registry login'
        required: false
      RESOURCE_GROUP:
        description: 'required for Azure registry login'
        required: false
      REGISTRY_LOGIN_SERVER:
        description: 'required for Azure registry login'
        required: false
      REGISTRY_USERNAME:
        description: 'required for Azure registry login'
        required: false
      REGISTRY_PASSWORD:
        description: 'required for Azure registry login'
        required: false
      REDHAT_USERNAME:
        description: 'required for Azure registry login'
        required: false
      REDHAT_PASSWORD:
        description: 'required for Azure registry login'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:

      # In this job, all steps begin with a name
      - name: Checkout repo
        uses: actions/checkout@v2
        
      - name: Upgrade pip
        run: pip install --upgrade pip
        
      - name: Install python requirements (ansible-builder)
        run: pip install -r requirements.txt

      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.REGISTRY_USERNAME }}","clientSecret":"${{ secrets.REGISTRY_PASSWORD }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
          allow-no-subscriptions: true

      - name: Log in to registry.redhat.io
        id: registry-redhat
        uses: redhat-actions/podman-login@v1
        with:
          registry: registry.redhat.io
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Build image
        id: build-image
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          ansible-builder build \
          --tag=${{ inputs.EE_FOLDER_NAME }}:${{ inputs.EE_IMAGE_TAG }}
           
      - name: Push to Azure Container Registry 
        id: push-to-dekalbcontainers
        run: |
          podman login ${{ secrets.REGISTRY_LOGIN_SERVER }} -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
          podman tag ${{ inputs.EE_FOLDER_NAME }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ inputs.EE_FOLDER_NAME }}:${{ inputs.EE_IMAGE_TAG }}
          podman push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ inputs.EE_FOLDER_NAME }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-acr.outputs.registry-paths }}"
